{"version":3,"sources":["context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/pages/About.js","component/pages/Notfound.js","component/Test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","console","log","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","async","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","flexDirection","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","About","Notfound","Test","title","body","fetch","then","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.069b89c5.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts:[action.payload,\r\n          ...state.contacts]\r\n      };\r\n      case \"UPDATE_CONTACT\":\r\n        return {\r\n          ...state,\r\n          contacts:state.contacts.map(\r\n            contact =>\r\n              contact.id === action.payload.id \r\n              ? (contact = action.payload) : contact)\r\n        };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n      this.setState(state => reducer(state, action));\r\n    }\r\n  };\r\n  async componentDidMount(){\r\n    const res = await axios\r\n    .get('https://jsonplaceholder.typicode.com/users');\r\n\r\n\r\n    this.setState({contacts:res.data});\r\n    console.log('componentDidUpdate...')\r\n}\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from 'axios';\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onDeleteClick = async(id, dispatch) => {\r\n    try{\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch(e){\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n   \r\n\r\n   \r\n    \r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  className=\"fas fa-sort-down\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  {\" \"}\r\n                </i>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ float: \"right\", cursor: \"pointer\", color: \"#F00\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                <i\r\n                  className=\"fas fa-pencil-alt\"\r\n                  style={{ \r\n                    cursor:'pointer',\r\n                    float:'right',\r\n                    color:'black',\r\n                    marginRight:'1rem'\r\n                  }}></i>\r\n                   </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"> EMail : {email}</li>\r\n                  <li className=\"list-group-item\">Contact : {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n \r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact </span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport  {Link} from 'react-router-dom';\r\nconst Header= (props)=> {\r\n    const {branding} = props;\r\n    return (\r\n        \r\n        <nav className=\"navbar navbar-dark bg-primary mb-3 py-0\">\r\n        <div className=\"container\">\r\n            <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <ul className=\"navbar-nav\" style={{flexDirection: \"row\"}}> \r\n                    <li className=\"nav-item mr-2\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                           <i className=\"fas fa-home\"> </i> Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item mr-2\">\r\n                        <Link to=\"/contact/add\" className=\"nav-link\">\r\n                        <i className=\"fas fa-plus\"> </i> Add \r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item mr-2\">\r\n                        <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\"> </i>   About \r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n          \r\n        </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nHeader.defaultProps={\r\n    branding:'My Apps'\r\n}\r\nHeader.propTypes={\r\n    branding:PropTypes.string.isRequired\r\n}\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n const TextInputGroup=({\r\nlabel,\r\nname,\r\nvalue,\r\nplaceholder,\r\ntype,\r\nonChange,\r\nerror\r\n }) => {\r\n    return(\r\n        <div className=\"form-group\">\r\n                    <label htmlFor={name}> {label}</label>\r\n                    <input\r\n                      type={type}\r\n                      name={name}\r\n                      className={classnames('form-control form-control-lg',{\r\n                          'is-invalid':error\r\n                      })}\r\n                      placeholder={placeholder}\r\n                      value={value}\r\n                      onChange={onChange}\r\n                    />\r\n                    {error && <div className=\"invalid-feedback\">{error}</div>}\r\n                  </div>\r\n    );\r\n}\r\nTextInputGroup.propTypes={\r\n    label:PropTypes.string.isRequired,\r\n    name:PropTypes.string.isRequired,\r\n    placeholder:PropTypes.string.isRequired,\r\n    type:PropTypes.string.isRequired,\r\n    value:PropTypes.string.isRequired,\r\n    onChange:PropTypes.func.isRequired,\r\n    error:PropTypes.string\r\n}\r\nTextInputGroup.defaultProps={\r\n    type:'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    //check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios\r\n    .post('https://jsonplaceholder.typicode.com/users',newContact);\r\n   \r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data })\r\n    \r\n    console.log(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone ,errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  async componentDidMount(){\r\n   const {id} = this.props.match.params;\r\n   const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n   const contact = res.data;\r\n   this.setState({\r\n       name:contact.name,\r\n       email:contact.email,\r\n       phone:contact.phone\r\n   });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    //check for errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const updContact={\r\n        name,\r\n        email,\r\n        phone\r\n    }\r\n    const {id} = this.props.match.params;\r\n\r\n    const res = await axios.put\r\n    (`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n\r\n    dispatch({type:'UPDATE_CONTACT',payload:res.data});\r\n    //clear state\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone ,errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">  About Contact Manager  </h1>\r\n            <p className=\"text-secondary\">version  1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Notfound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">  404 Page Not Found </h1>\r\n            <p className=\"text-secondary\">Sorry, this page not exist.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n    console.log(\"componentDidMount...\");\r\n  }\r\n  /*     UNSAFE_componentWillMount()\r\n    {\r\n        console.log('componentWillMount...');\r\n    }\r\n    componentDidUpdate(){\r\n        console.log('componentDidUpdate...')\r\n    }\r\n    UNSAFE_componentWillUpdate(){\r\n        console.log('componentWillUpdate...')\r\n    }\r\n    UNSAFE_componentWillReceiveProps(nextProps,nextState)\r\n    {\r\n        console.log('componentWillReceiveProps...')\r\n    }\r\n    static getDerivedStateFromProps(nextProps,prevState){\r\n        return {\r\n            test:'something'\r\n        }\r\n    }\r\n    getSnapshotBeforeUpdate(prevProps,prevState){\r\n        console.log('getSnapshotBeforeUpdate..')\r\n    } */\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test;\r\n","import React from 'react';\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\nimport Contacts from './component/contacts/Contacts';\nimport Header from './component/layout/Header';\nimport AddContact from './component/contacts/AddContact';\nimport EditContact from './component/contacts/EditContact';\nimport About from './component/pages/About';\nimport {Provider} from './context';\n \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Notfound from './component/pages/Notfound';\nimport Test from './component/Test/Test';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n    <div className=\"App\">\n      <Header branding=\"Contact Manager\"/>\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\" component={Contacts}></Route>\n          <Route exact path=\"/contact/add\" component={AddContact}></Route>\n          <Route exact path=\"/contact/edit/:id\" component={EditContact}></Route>\n          <Route exact path=\"/about\" component={About}></Route>\n          <Route exact path=\"/test\" component={Test}></Route>\n          <Route  component={Notfound}></Route>\n        </Switch>\n       {/*  <AddContact />\n        <Contacts/>     */}   \n      </div> \n    </div>\n    </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}